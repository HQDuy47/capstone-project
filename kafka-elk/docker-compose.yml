version: "3.7"
services:
  # Kafka Docker Image
  zookeeper:
    image: zookeeper
    restart: always
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    environment :
      ZOO_MY_ID: 1
    networks:
      - kafkanet
  kafkaserver:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    links:
      - zookeeper:zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${HOST_IP}:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_CREATE_TOPICS: "capstone:1:1,job:1:1,company:1:1"
    depends_on:
      - zookeeper
    networks:
      - kafkanet
  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    container_name: kakfa-manager
    restart: always
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
      - kafkaserver
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
      command: -Dpidfile.path=/dev/null
    networks:
      - kafkanet
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    environment:
      cluster.name: docker-cluster
      network.host: 0.0.0.0
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      xpack.security.enabled: false
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - kafkanet
    restart: unless-stopped
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - kafkanet
    depends_on: ['elasticsearch']
  logstash:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}
    container_name: logstash
    ports:
      - 9600:9600
    links:
      - elasticsearch:elasticsearch
      - kafkaserver:kafkaserver
    environment:
      HOST_IP: ${HOST_IP}
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - kafkanet
    depends_on: ['elasticsearch', 'kafkaserver']
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      # - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro,Z
      # - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
      - ./logstash/vendor/postgresql-42.6.1.jar:/usr/share/logstash/vendor/postgresql-42.6.1.jar:ro,Z
    restart: unless-stopped
  
networks:
  kafkanet:
    driver: bridge