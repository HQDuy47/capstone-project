docker run -it -v ${PWD}:/work -v ~/.aws:/root/.aws -w /work --entrypoint /bin/sh amazon/aws-cli:2.15.27  
yum install curl tar gzip sudo
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin
eksctl version

eksctl create cluster \
    --name findyourjob \
    --version 1.29 \
    --region ap-southeast-1 \
    --nodegroup-name group-nodes \
    --node-type t3.medium \
    --nodes 1 \
    --nodes-min 1 \
    --nodes-max 1 \
    --node-volume-size 40

    eksctl create iamserviceaccount     --name ebs-csi-controller-sa     --namespace kube-system     --cluster findyourjob     --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy     --approve       --role-name AmazonEKS_EBS_CSI_DriverRole_FindYourJob --role-only
    eksctl create addon --name aws-ebs-csi-driver --cluster findyourjob --service-account-role-arn arn:aws:iam::633589447460:role/AmazonEKS_EBS_CSI_DriverRole_FindYourJob --force

    helm install -f values.yaml findyourjob-keycloak bitnami/keycloak

    openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout auth-tls.key -out auth-tls.crt -subj "/CN=auth.findyourjob.tech/0=Test"
    kubectl create secret tls auth-tls-secret --key auth-tls.key --cert auth-tls.crt

    // copy config to the pod
    cat keycloak.json | kubectl exec -i keycloak-6c676cd85-tnxwh -- sh -c "cat > /tmp/keycloak.json"

    kubectl exec keycloak-6c676cd85-tnxwh -- \
/opt/keycloak/bin/kc.sh import --file /tmp/keycloak.json

    // create file config
    kubectl create configmap config --from-file keycloak.json

    kubectl exec -it keycloak-6899784bdd-dn78b -- /bin/bash

    helm -n kafka upgrade --install kafka-release bitnami/kafka --create-namespace --set persistence.size=4Gi,logPersistence.size=2Gi,volumePermissions.enabled=true,persistence.enabled=true,logPersistence.enabled=true,serviceAccount.create=true,rbac.create=true --version 23.0.7 -f values.yaml

    // eck 
    kubectl create -f https://download.elastic.co/downloads/eck/2.11.1/crds.yaml

    kubectl apply -f https://download.elastic.co/downloads/eck/2.11.1/operator.yaml

    https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-deploy-elasticsearch.html


    helm install es-kb-quickstart elastic/eck-stack -n elastic-stack --create-namespace

    aws eks update-nodegroup-config --cluster-name findyourjob --nodegroup-name group-nodes --scaling-config minSize=1,maxSize=1,desiredSize=1

    kubectl cordon ip-192-168-14-140.ap-southeast-1.compute.internal

    kubectl drain ip-192-168-14-140.ap-southeast-1.compute.internal --ignore-daemonsets --delete-emptydir-data

    https://kubernetes.github.io/ingress-nginx/examples/customization/custom-configuration/

    kubectl scale deployment/inflate --replicas 5

    aws ec2 create-tags --tags "Key=karpenter.sh/discovery,Value=${CLUSTER_NAME}" --resources "subnet-03a60ca85c4632b49" "subnet-0890a157d107924aa" "subnet-06fce67f55b544dc1"

    kubectl delete configmap eks-loadtest-locustfile && kubectl create configmap eks-loadtest-locustfile --from-file ./locustfile.py

    helm upgrade --install findyourjob-locust deliveryhero/locust \
 --set loadtest.name=eks-loadtest \
 --set loadtest.locust_locustfile_configmap=eks-loadtest-locustfile \
 --set loadtest.locust_locustfile=locustfile.py \
 --set worker.hpa.enabled=true \
 --set worker.hpa.minReplicas=2

    KARPENTER_NAMESPACE=kube-system
    CLUSTER_NAME=findyourjob
